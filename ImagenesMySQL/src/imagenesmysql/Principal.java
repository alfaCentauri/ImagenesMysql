/*
 * Licencia GNU v2.0
 */
package imagenesmysql;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**Ventana para mostrar la imagen a guardar y los controles.
 *
 * @author Ricardo Presilla
 */
public class Principal extends javax.swing.JFrame {

    private Conexion conexion;
    /**Almacena el nombre del archivo*/
    private String nombre;
    /**Almacena el archivo.*/
    private File archivo;
    /**Almacena la imagen*/
    private Image vista;
    /**
     * Crea una nueva ventana principal
     */
    public Principal() {
        initComponents();
        try{
            conexion =new Conexion();
            archivo = null;
            nombre = null;
        }catch(Exception ex){
            System.out.println("Error al crear el enlace.");
            guardar.setEnabled(false);
            leer.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cerrar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        imagen = new javax.swing.JLabel();
        leer = new javax.swing.JButton();
        BBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Visor de imágenes");
        setPreferredSize(new java.awt.Dimension(1024, 768));

        cerrar.setText("Cerrar");
        cerrar.setToolTipText("Cierra la aplicación");
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.setToolTipText("Guarda el archivo a la base de datos.");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        imagen.setText("Imagen");

        leer.setText("Leer");
        leer.setToolTipText("Lee el archivo de la base de datos.");
        leer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leerActionPerformed(evt);
            }
        });

        BBuscar.setText("Buscar");
        BBuscar.setToolTipText("Busca un archivo de imagen en la pc.");
        BBuscar.setName("BBuscar"); // NOI18N
        BBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cerrar)
                .addGap(18, 18, 18)
                .addComponent(BBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                .addComponent(leer)
                .addGap(18, 18, 18)
                .addComponent(guardar)
                .addContainerGap())
            .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrar)
                    .addComponent(guardar)
                    .addComponent(leer)
                    .addComponent(BBuscar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**Metodo de acción del boton para guardar una imagen en la base de datos.*/
    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        try{
            if(conexion.GuardarImagen(nombre,archivo)){
                System.out.println("Se guardo el archivo.");
            }
        }catch(Exception ex){
            System.out.println("Error al guardar el archivo.");
        }
    }//GEN-LAST:event_guardarActionPerformed
/**Metodo de acción del boton para cerrar la aplicación.*/
    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        try {
            conexion.Cerrar_Coneccion();
        } catch (SQLException ex) {
            System.out.println("Error con la base de datos.");
        }
        System.exit(0);
    }//GEN-LAST:event_cerrarActionPerformed
/**Metodo de acción del boton para leer una imagen de la base de datos.*/
    private void leerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leerActionPerformed
        try{
            Image img = conexion.LeerImagen();
            if(img!=null){
                System.out.println("Se obtuvo el archivo.");
                ImageIcon icon = new ImageIcon(img);
                this.imagen.setText("");
                this.imagen.setIcon(icon);
            }
        }catch(Exception ex){
            System.out.println("Error al leer el archivo.");
        }
    }//GEN-LAST:event_leerActionPerformed

    private void BBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBuscarActionPerformed
        try {
            JFileChooser explorador = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "JPG & GIF Images", "jpg", "gif");
            explorador.setFileFilter(filter);
            int returnVal = explorador.showOpenDialog(this);
            if(returnVal == JFileChooser.APPROVE_OPTION) {
                nombre=explorador.getSelectedFile().getName();
                archivo= explorador.getSelectedFile();
               System.out.println("Usted seleccionó el archivo: "+nombre);
            }
            //vista previa de la imagen
            vista = ImageIO.read(archivo);
            System.out.println("Se obtuvo el archivo.");
            ImageIcon icon = new ImageIcon(vista.getScaledInstance(1020, 650, 1));
            this.imagen.setText("");
            this.imagen.setIcon(icon);
        } catch (IOException ex) {
            System.out.println("Error al leer el archivo.\n"+ex.getMessage());
        }
    }//GEN-LAST:event_BBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBuscar;
    private javax.swing.JButton cerrar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel imagen;
    private javax.swing.JButton leer;
    // End of variables declaration//GEN-END:variables
}
